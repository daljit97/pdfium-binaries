name: Build all

on:
  workflow_dispatch:
    inputs:
      branch:
        description: PDFium branch
        required: false
        default: main
      version:
        description: PDFium version
        required: false
        default: ""
      enable_v8:
        description: Enable V8
        type: boolean
        required: false
        default: false
      is_debug:
        description: Is debug
        type: boolean
        required: false
        default: false
      publish:
        description: Publish release
        type: boolean
        required: false
        default: false

jobs:
  linux_x64:
    name: Linux x64
    uses: ./.github/workflows/build.yml
    with:
      branch: ${{ github.event.inputs.branch }}
      version: ${{ github.event.inputs.version }}
      is_debug: ${{ github.event.inputs.is_debug == 'true' }}
      target_os: linux
      target_cpu: x64
      enable_v8: false

  linux_x64_asan:
    name: Linux x64 ASAN
    uses: ./.github/workflows/build.yml
    with:
      branch: ${{ github.event.inputs.branch }}
      version: ${{ github.event.inputs.version }}
      is_debug: ${{ github.event.inputs.is_debug == 'true' }}
      target_os: linux
      target_cpu: x64
      enable_v8: false
      sanitizer: address

  linux_x64_tsan:
    name: Linux x64 TSAN
    uses: ./.github/workflows/build.yml
    with:
      branch: ${{ github.event.inputs.branch }}
      version: ${{ github.event.inputs.version }}
      is_debug: ${{ github.event.inputs.is_debug == 'true' }}
      target_os: linux
      target_cpu: x64
      enable_v8: false
      sanitizer: thread

  linux_x64_usan:
    name: Linux x64 TSAN
    uses: ./.github/workflows/build.yml
    with:
      branch: ${{ github.event.inputs.branch }}
      version: ${{ github.event.inputs.version }}
      is_debug: ${{ github.event.inputs.is_debug == 'true' }}
      target_os: linux
      target_cpu: x64
      enable_v8: false
      sanitizer: undefined

  win_x64:
    name: Windows x64
    uses: ./.github/workflows/build.yml
    with:
      branch: ${{ github.event.inputs.branch }}
      version: ${{ github.event.inputs.version }}
      is_debug: ${{ github.event.inputs.is_debug == 'true' }}
      target_os: win
      target_cpu: x64
      enable_v8: false
  wasm:
    name: WASM
    uses: ./.github/workflows/build.yml
    with:
      branch: ${{ github.event.inputs.branch }}
      version: ${{ github.event.inputs.version }}
      is_debug: ${{ github.event.inputs.is_debug == 'true' }}
      target_os: wasm
      target_cpu: wasm
      enable_v8: false

  publish:
    name: Publish Release
    if: startsWith(github.event.inputs.branch, 'chromium/') && github.event.inputs.version && github.event.inputs.publish == 'true'
    runs-on: ubuntu-latest
    needs:
      - linux_x64
      - win_x64
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Create tarballs
        run: |
          for DIR in pdfium-*; do
            echo "::group::$DIR"
            (cd $DIR; tar czf ../$DIR.tgz *)
            echo "::endgroup::"
          done
      - name: Write release body
        run: echo 'This version was built with branch `${{ github.event.inputs.branch }}` of PDFium' > RELEASE.md
      - name: Get changes
        continue-on-error: true
        run: |
          CURRENT_REV=${{ github.event.inputs.branch }}
          PREVIOUS_REV=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r ".tag_name")
          git clone -b "${{ github.event.inputs.branch }}" https://pdfium.googlesource.com/pdfium.git
          cat <<END >> RELEASE.md
          ### Changes
          Commits between \`$PREVIOUS_REV\` and \`$CURRENT_REV\`:
          END
          git -C "pdfium" log origin/${PREVIOUS_REV}.. --pretty=format:'* [%s](https://pdfium.googlesource.com/pdfium/+/%H)' >> RELEASE.md
      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          bodyFile: RELEASE.md
          token: ${{ secrets.GITHUB_TOKEN }}
          name: PDFium ${{ github.event.inputs.version }}
          tag: ${{ github.event.inputs.branch }}
          artifacts: "pdfium-*.tgz"
